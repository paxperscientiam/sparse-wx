{"code":"//     Copyright (C) 2018 Christopher David Ramos\r\nexport var GoogleGeoCodeInterface;\r\n(function (GoogleGeoCodeInterface) {\r\n    // values are those used by Google\r\n    GoogleGeoCodeInterface[\"CITY\"] = \"locality\";\r\n    GoogleGeoCodeInterface[\"COUNTRY\"] = \"country\";\r\n    GoogleGeoCodeInterface[\"COUNTY\"] = \"administrative_area_level_2\";\r\n    GoogleGeoCodeInterface[\"STATE\"] = \"administrative_area_level_1\";\r\n    GoogleGeoCodeInterface[\"ZIP\"] = \"postal_code\";\r\n    GoogleGeoCodeInterface[\"ZIP_CODE\"] = \"postal_code\";\r\n    GoogleGeoCodeInterface[\"LAT\"] = \"lat\";\r\n    GoogleGeoCodeInterface[\"LON\"] = \"lng\";\r\n})(GoogleGeoCodeInterface || (GoogleGeoCodeInterface = {}));\r\nexport const INTERFACE = {\r\n    GoogleGeoCodeInterface,\r\n    NationalWeatherServiceInterface: {\r\n        // NWS values\r\n        API: {\r\n            ALERTS: {\r\n                ACTIVE: \"alerts/active\",\r\n                _: \"alerts\",\r\n            },\r\n            GRID_POINTS: {\r\n                FORECAST: {\r\n                    HOURLY: \"@wfo/@xy/forecast/hourly\",\r\n                    _: \"@wfo/@xy/forecast\",\r\n                },\r\n                _: \"@wfo/@xy\",\r\n            },\r\n            POINTS: {\r\n                _: \"points\",\r\n            },\r\n            _: \"https://api.weather.gov/\",\r\n        },\r\n        URL: {\r\n            STATE_ALERTS: \"https://alerts.weather.gov/cap/\",\r\n        },\r\n    },\r\n};\r\nexport var APPROVED_POLITIES;\r\n(function (APPROVED_POLITIES) {\r\n    APPROVED_POLITIES[\"UNITED_STATES\"] = \"United States\";\r\n    APPROVED_POLITIES[\"US\"] = \"US\";\r\n    APPROVED_POLITIES[\"PR\"] = \"PR\";\r\n    APPROVED_POLITIES[\"PUERTO_RICO\"] = \"Puerto Rico\";\r\n    APPROVED_POLITIES[\"GUAM\"] = \"Guam\";\r\n})(APPROVED_POLITIES || (APPROVED_POLITIES = {}));\r\nexport const HTTP = {\r\n    WX_SERVICE: {\r\n        PARAMS: {\r\n            escaping: false,\r\n            headers: {\r\n                \"Accept\": \"application/geo+json;version=1\",\r\n                \"From\": \"chrisdavidramos@gmail.com\",\r\n                // tslint:disable-next-line:max-line-length\r\n                \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:62.0) Gecko/20100101 Firefox/62.0 SparseWX/2066190da3f83c823e3733b925a033e5\",\r\n            },\r\n            muteHttpExceptions: true,\r\n        },\r\n        URL: {\r\n            STATE_ALERTS: \"https://alerts.weather.gov/cap/\",\r\n        },\r\n    },\r\n};\r\nexport var applicationState;\r\n(function (applicationState) {\r\n    applicationState[\"mint\"] = \"applicationState_mint\";\r\n    applicationState[\"wxService\"] = \"applicationState_wxService\";\r\n    applicationState[\"marker\"] = \"applicationState_marker\";\r\n    applicationState[\"test_lat\"] = \"applicationState_test_lat\";\r\n    applicationState[\"test_lon\"] = \"applicationState_test_lon\";\r\n    applicationState[\"test_coo\"] = \"applicationState_test_coo\";\r\n    applicationState[\"test_submittedAddress\"] = \"applicationState_test_submittedAddress\";\r\n    applicationState[\"test_chosenTempUnit\"] = \"applicationState_test_chosenTempUnit\";\r\n    applicationState[\"test_validAddress\"] = \"applicationState_test_validAddress\";\r\n    applicationState[\"test_validUsername\"] = \"applicationState_test_validUsername\";\r\n    applicationState[\"test_WeatherSectionAddress\"] = \"applicationState_test_WeatherSectionAddress\";\r\n    applicationState[\"test_WeatherWidgetArgs\"] = \"applicationState_test_WeatherWidgetArgs\";\r\n    applicationState[\"test_WeatherServiceArgs\"] = \"applicationState_test_WeatherServiceArgs\";\r\n    applicationState[\"test_urlNwsMetadata\"] = \"applicationState_test_urlNwsMetadata\";\r\n    applicationState[\"test_wxUrl\"] = \"applicationState_test_wxUrl\";\r\n    applicationState[\"test_WeatherServiceResultTemp\"] = \"applicationState_test_WeatherServiceResultTemp\";\r\n    applicationState[\"test_weatherWidgetException\"] = \"applicationState_test_weatherWidgetException\";\r\n    applicationState[\"test_WxWidgetCount\"] = \"applicationState_test_WxWidgetCount\";\r\n    applicationState[\"test_alertUrl\"] = \"applicationState_test_alertUrl\";\r\n    applicationState[\"test_metaDataUrl\"] = \"applicationState_test_metaDataUrl\";\r\n    applicationState[\"test_urlWxServiceCheck\"] = \"applicationState_test_urlWxServiceCheck\";\r\n    applicationState[\"test_userServiceCheck\"] = \"applicationState_test_userServiceCheck\";\r\n    applicationState[\"test_wxServiceResultTemp\"] = \"applicationState_test_wxServiceResultTemp\";\r\n    applicationState[\"test_wxPeriodCount\"] = \"applicationState_test_wxPeriodCount\";\r\n    applicationState[\"test_wxTimeZone\"] = \"applicationState_test_wxTimeZone\";\r\n    applicationState[\"test_catchEx\"] = \"applicationState_test_catchEx\";\r\n    applicationState[\"test_JRHfetch\"] = \"applicationState_test_JRHfetch\";\r\n    applicationState[\"test_fetchResponse\"] = \"applicationState_test_fetchResponse\";\r\n    applicationState[\"test_submitNameCallback\"] = \"applicationState_test_submitNameCallback\";\r\n    applicationState[\"test_shouldProcessForm\"] = \"applicationState_test_shouldProcessForm\";\r\n    applicationState[\"test_wxSuccessfulFetch\"] = \"applicationState_test_wxSuccessfulFetch\";\r\n    applicationState[\"test_PrepWx\"] = \"applicationState_test_PrepWx\";\r\n    applicationState[\"test_StatusCheck\"] = \"applicationState_test_StatusCheck\";\r\n    applicationState[\"test_wxPN\"] = \"applicationState_test_wxPN\";\r\n})(applicationState || (applicationState = {}));\r\nexport var userBio;\r\n(function (userBio) {\r\n    userBio[\"name\"] = \"user_name\";\r\n    userBio[\"temp_unit\"] = \"user_temp_unit\";\r\n    userBio[\"suggested_address_one\"] = \"user_address\";\r\n    userBio[\"suggested_address_two\"] = \"suggested_address_two\";\r\n    userBio[\"suggested_address_three\"] = \"suggested_address_three\";\r\n})(userBio || (userBio = {}));\r\nexport var userLocale;\r\n(function (userLocale) {\r\n    userLocale[\"address\"] = \"user_address\";\r\n    userLocale[\"city\"] = \"user_city\";\r\n    userLocale[\"coo\"] = \"user_coordinate\";\r\n    userLocale[\"coordinate\"] = \"user_coordinate\";\r\n    userLocale[\"coordinates\"] = \"user_coordinate\";\r\n    userLocale[\"lat\"] = \"user_lat\";\r\n    userLocale[\"lon\"] = \"user_lon\";\r\n    userLocale[\"country\"] = \"user_country\";\r\n    userLocale[\"county\"] = \"user_county\";\r\n    userLocale[\"region\"] = \"user_region\";\r\n    userLocale[\"state\"] = \"user_region\";\r\n    userLocale[\"state_long\"] = \"user_region_long\";\r\n    userLocale[\"tz\"] = \"user_tz\";\r\n    userLocale[\"zip\"] = \"user_zip_code\";\r\n    userLocale[\"zip_code\"] = \"user_zip_code\";\r\n})(userLocale || (userLocale = {}));\r\nexport var DEFAULTS;\r\n(function (DEFAULTS) {\r\n    DEFAULTS[\"TEMP_UNIT\"] = \"dropdown_item_f\";\r\n})(DEFAULTS || (DEFAULTS = {}));\r\nexport const PROPS = {\r\n    DEFAULTS,\r\n    OPTIONS: {\r\n        TEMP_SELECTION_ITEMS: [\r\n            [\"Fahrenheit\", \"dropdown_item_c\", 0],\r\n            [\"Celsius\", \"dropdown_item_c\", 1],\r\n        ],\r\n    },\r\n    applicationState,\r\n    CACHE: {\r\n        WX: {\r\n            RAW: \"CACHE_WX_RAW\",\r\n        },\r\n    },\r\n    WX: {\r\n        WX_API: \"WX_API\",\r\n        WX_API_ENDPOINT: \"WX_API_ENDPOINT\",\r\n        WX_API_PARAMS: \"WX_API_PARAMS\",\r\n        WX_UPDATE_TIME: \"WX_UPDATE_TIME\",\r\n        WX_TIMEZONE: \"WX_TZ\",\r\n        WX_TZ: \"WX_TZ\",\r\n        CWA: \"WX_CWA\",\r\n    },\r\n    userBio,\r\n    userLocale,\r\n};\r\nexport const BRAND = {\r\n    AUTHOR: \"Christopher David Ramos\",\r\n    EMAILS: {\r\n        BUGS: [\"sparsewx@paxperscientiam.com\", \"'SparseWx' <sparsewx@paxperscientiam.com>\"],\r\n    },\r\n    NAME: \"SparseWx\",\r\n    URLS: {\r\n        LICENSE: \"https://github.com/paxperscientiam/sparse-wx/blob/license.txt/license.txt\",\r\n        NWS: \"https://www.weather.gov/\",\r\n        PRIVACY: \"https://github.com/paxperscientiam/sparse-wx/blob/privacy-policy.md/privacy.md\",\r\n    },\r\n    version: \" \",\r\n};\r\nexport var CARDINAL_DIRECTIONS;\r\n(function (CARDINAL_DIRECTIONS) {\r\n    CARDINAL_DIRECTIONS[\"EAST\"] = \"east\";\r\n    // EAST = \"⇛\",\r\n    CARDINAL_DIRECTIONS[\"NORTH\"] = \"north\";\r\n    // NORTH = \"⇑\",\r\n    CARDINAL_DIRECTIONS[\"NORTH_EAST\"] = \"northeast\";\r\n    // NORTH_EAST = \"⇗\",\r\n    CARDINAL_DIRECTIONS[\"NORTH_NE\"] = \"north-northeast\";\r\n    CARDINAL_DIRECTIONS[\"NORTH_NW\"] = \"north-northwest\";\r\n    CARDINAL_DIRECTIONS[\"NORTH_WEST\"] = \"northwest\";\r\n    // NORTH_WEST = \"⇖\",\r\n    //\r\n    CARDINAL_DIRECTIONS[\"SOUTH\"] = \"south\";\r\n    // SOUTH = \"⇓\",\r\n    //      SOUTH_EAST = \"southeast\",\r\n    // SOUTH_EAST = \"⇘\",\r\n    CARDINAL_DIRECTIONS[\"South\"] = \"southwest\";\r\n    CARDINAL_DIRECTIONS[\"SOUTH_WEST\"] = \"\\u21D9\";\r\n    CARDINAL_DIRECTIONS[\"N\"] = \"north\";\r\n    CARDINAL_DIRECTIONS[\"NE\"] = \"northeast\";\r\n    CARDINAL_DIRECTIONS[\"NNE\"] = \"north-northeast\";\r\n    CARDINAL_DIRECTIONS[\"NNW\"] = \"north-northwest\";\r\n    CARDINAL_DIRECTIONS[\"NW\"] = \"northwest\";\r\n    CARDINAL_DIRECTIONS[\"E\"] = \"east\";\r\n    CARDINAL_DIRECTIONS[\"ENE\"] = \"east-northeast\";\r\n    CARDINAL_DIRECTIONS[\"ESE\"] = \"east-southeast\";\r\n    CARDINAL_DIRECTIONS[\"S\"] = \"south\";\r\n    CARDINAL_DIRECTIONS[\"SE\"] = \"southeast\";\r\n    CARDINAL_DIRECTIONS[\"SSE\"] = \"south-southeast\";\r\n    CARDINAL_DIRECTIONS[\"SSW\"] = \"South-southwest\";\r\n    CARDINAL_DIRECTIONS[\"SW\"] = \"southwest\";\r\n    CARDINAL_DIRECTIONS[\"W\"] = \"west\";\r\n    CARDINAL_DIRECTIONS[\"WEST\"] = \"west\";\r\n    CARDINAL_DIRECTIONS[\"WNW\"] = \"west-northwest\";\r\n    CARDINAL_DIRECTIONS[\"WSW\"] = \"west-southwest\";\r\n})(CARDINAL_DIRECTIONS || (CARDINAL_DIRECTIONS = {}));\r\nexport var PALETTE;\r\n(function (PALETTE) {\r\n    PALETTE[\"AQUA\"] = \"#7FDBFF\";\r\n    PALETTE[\"BLUE\"] = \"#0074D9\";\r\n    PALETTE[\"NAVY\"] = \"#001f3f\";\r\n    PALETTE[\"TEAL\"] = \"#39CCCC\";\r\n    PALETTE[\"GREEN\"] = \"#2ECC40\";\r\n    PALETTE[\"LIME\"] = \"#01FF70\";\r\n    PALETTE[\"OLIVE\"] = \"#3D9970\";\r\n    PALETTE[\"YELLOW\"] = \"#FFDC00\";\r\n    PALETTE[\"FUCHSIA\"] = \"#F012BE\";\r\n    PALETTE[\"MAROON\"] = \"#85144b\";\r\n    PALETTE[\"ORANGE\"] = \"#FF851B\";\r\n    PALETTE[\"RED\"] = \"#FF4136\";\r\n    PALETTE[\"BLACK\"] = \"#111111\";\r\n    PALETTE[\"GRAY\"] = \"#AAAAAA\";\r\n    PALETTE[\"PURPLE\"] = \"#B10DC9\";\r\n    PALETTE[\"SILVER\"] = \"#DDDDDD\";\r\n    PALETTE[\"WHITE\"] = \"#FFFFFF\";\r\n})(PALETTE || (PALETTE = {}));\r\nexport const UI = {\r\n    COLORS: {\r\n        SCHEME: {\r\n            HIGHLIGHT: PALETTE.ORANGE,\r\n            PRIMARY: PALETTE.NAVY,\r\n            QUATERNARY: PALETTE.BLUE,\r\n            SECONDARY: PALETTE.RED,\r\n            TERTIARY: PALETTE.SILVER,\r\n        },\r\n    },\r\n    PALETTE,\r\n    PLACEHOLDER_TEXT: {\r\n        CARD_SECTION_HEADER: \" \",\r\n        CARD_SUBTITLE: \" \",\r\n    },\r\n    // https://clrs.cc/\r\n    WIDGETS: {\r\n        WEATHER_TODAY: {\r\n            COLOR_ONE: \"#4a707a\",\r\n        },\r\n    },\r\n    WX_SECTION__WIDGET_COUNT: 8,\r\n};\r\n//# sourceMappingURL=Dictionary.js.map","map":"{\"version\":3,\"file\":\"Dictionary.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Data/Dictionary.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ramos/Development/gmail-weather/Data/Dictionary.d.ts","writeByteOrderMark":false,"text":"export declare enum GoogleGeoCodeInterface {\r\n    CITY = \"locality\",\r\n    COUNTRY = \"country\",\r\n    COUNTY = \"administrative_area_level_2\",\r\n    STATE = \"administrative_area_level_1\",\r\n    ZIP = \"postal_code\",\r\n    ZIP_CODE = \"postal_code\",\r\n    LAT = \"lat\",\r\n    LON = \"lng\"\r\n}\r\nexport declare const INTERFACE: {\r\n    GoogleGeoCodeInterface: typeof GoogleGeoCodeInterface;\r\n    NationalWeatherServiceInterface: {\r\n        API: {\r\n            ALERTS: {\r\n                ACTIVE: string;\r\n                _: string;\r\n            };\r\n            GRID_POINTS: {\r\n                FORECAST: {\r\n                    HOURLY: string;\r\n                    _: string;\r\n                };\r\n                _: string;\r\n            };\r\n            POINTS: {\r\n                _: string;\r\n            };\r\n            _: string;\r\n        };\r\n        URL: {\r\n            STATE_ALERTS: string;\r\n        };\r\n    };\r\n};\r\nexport declare enum APPROVED_POLITIES {\r\n    UNITED_STATES = \"United States\",\r\n    US = \"US\",\r\n    PR = \"PR\",\r\n    PUERTO_RICO = \"Puerto Rico\",\r\n    GUAM = \"Guam\"\r\n}\r\nexport declare const HTTP: {\r\n    WX_SERVICE: {\r\n        PARAMS: {\r\n            escaping: boolean;\r\n            headers: {\r\n                \"Accept\": string;\r\n                \"From\": string;\r\n                \"User-Agent\": string;\r\n            };\r\n            muteHttpExceptions: boolean;\r\n        };\r\n        URL: {\r\n            STATE_ALERTS: string;\r\n        };\r\n    };\r\n};\r\nexport declare enum applicationState {\r\n    mint = \"applicationState_mint\",\r\n    wxService = \"applicationState_wxService\",\r\n    marker = \"applicationState_marker\",\r\n    test_lat = \"applicationState_test_lat\",\r\n    test_lon = \"applicationState_test_lon\",\r\n    test_coo = \"applicationState_test_coo\",\r\n    test_submittedAddress = \"applicationState_test_submittedAddress\",\r\n    test_chosenTempUnit = \"applicationState_test_chosenTempUnit\",\r\n    test_validAddress = \"applicationState_test_validAddress\",\r\n    test_validUsername = \"applicationState_test_validUsername\",\r\n    test_WeatherSectionAddress = \"applicationState_test_WeatherSectionAddress\",\r\n    test_WeatherWidgetArgs = \"applicationState_test_WeatherWidgetArgs\",\r\n    test_WeatherServiceArgs = \"applicationState_test_WeatherServiceArgs\",\r\n    test_urlNwsMetadata = \"applicationState_test_urlNwsMetadata\",\r\n    test_wxUrl = \"applicationState_test_wxUrl\",\r\n    test_WeatherServiceResultTemp = \"applicationState_test_WeatherServiceResultTemp\",\r\n    test_weatherWidgetException = \"applicationState_test_weatherWidgetException\",\r\n    test_WxWidgetCount = \"applicationState_test_WxWidgetCount\",\r\n    test_alertUrl = \"applicationState_test_alertUrl\",\r\n    test_metaDataUrl = \"applicationState_test_metaDataUrl\",\r\n    test_urlWxServiceCheck = \"applicationState_test_urlWxServiceCheck\",\r\n    test_userServiceCheck = \"applicationState_test_userServiceCheck\",\r\n    test_wxServiceResultTemp = \"applicationState_test_wxServiceResultTemp\",\r\n    test_wxPeriodCount = \"applicationState_test_wxPeriodCount\",\r\n    test_wxTimeZone = \"applicationState_test_wxTimeZone\",\r\n    test_catchEx = \"applicationState_test_catchEx\",\r\n    test_JRHfetch = \"applicationState_test_JRHfetch\",\r\n    test_fetchResponse = \"applicationState_test_fetchResponse\",\r\n    test_submitNameCallback = \"applicationState_test_submitNameCallback\",\r\n    test_shouldProcessForm = \"applicationState_test_shouldProcessForm\",\r\n    test_wxSuccessfulFetch = \"applicationState_test_wxSuccessfulFetch\",\r\n    test_PrepWx = \"applicationState_test_PrepWx\",\r\n    test_StatusCheck = \"applicationState_test_StatusCheck\",\r\n    test_wxPN = \"applicationState_test_wxPN\"\r\n}\r\nexport declare enum userBio {\r\n    name = \"user_name\",\r\n    temp_unit = \"user_temp_unit\",\r\n    suggested_address_one = \"user_address\",\r\n    suggested_address_two = \"suggested_address_two\",\r\n    suggested_address_three = \"suggested_address_three\"\r\n}\r\nexport declare enum userLocale {\r\n    address = \"user_address\",\r\n    city = \"user_city\",\r\n    coo = \"user_coordinate\",\r\n    coordinate = \"user_coordinate\",\r\n    coordinates = \"user_coordinate\",\r\n    lat = \"user_lat\",\r\n    lon = \"user_lon\",\r\n    country = \"user_country\",\r\n    county = \"user_county\",\r\n    region = \"user_region\",\r\n    state = \"user_region\",\r\n    state_long = \"user_region_long\",\r\n    tz = \"user_tz\",\r\n    zip = \"user_zip_code\",\r\n    zip_code = \"user_zip_code\"\r\n}\r\nexport declare enum DEFAULTS {\r\n    TEMP_UNIT = \"dropdown_item_f\"\r\n}\r\nexport declare const PROPS: {\r\n    DEFAULTS: typeof DEFAULTS;\r\n    OPTIONS: {\r\n        TEMP_SELECTION_ITEMS: (string | number)[][];\r\n    };\r\n    applicationState: typeof applicationState;\r\n    CACHE: {\r\n        WX: {\r\n            RAW: string;\r\n        };\r\n    };\r\n    WX: {\r\n        WX_API: string;\r\n        WX_API_ENDPOINT: string;\r\n        WX_API_PARAMS: string;\r\n        WX_UPDATE_TIME: string;\r\n        WX_TIMEZONE: string;\r\n        WX_TZ: string;\r\n        CWA: string;\r\n    };\r\n    userBio: typeof userBio;\r\n    userLocale: typeof userLocale;\r\n};\r\nexport declare const BRAND: {\r\n    AUTHOR: string;\r\n    EMAILS: {\r\n        BUGS: string[];\r\n    };\r\n    NAME: string;\r\n    URLS: {\r\n        LICENSE: string;\r\n        NWS: string;\r\n        PRIVACY: string;\r\n    };\r\n    version: string;\r\n};\r\nexport declare enum CARDINAL_DIRECTIONS {\r\n    EAST = \"east\",\r\n    NORTH = \"north\",\r\n    NORTH_EAST = \"northeast\",\r\n    NORTH_NE = \"north-northeast\",\r\n    NORTH_NW = \"north-northwest\",\r\n    NORTH_WEST = \"northwest\",\r\n    SOUTH = \"south\",\r\n    South = \"southwest\",\r\n    SOUTH_WEST = \"\\u21D9\",\r\n    N = \"north\",\r\n    NE = \"northeast\",\r\n    NNE = \"north-northeast\",\r\n    NNW = \"north-northwest\",\r\n    NW = \"northwest\",\r\n    E = \"east\",\r\n    ENE = \"east-northeast\",\r\n    ESE = \"east-southeast\",\r\n    S = \"south\",\r\n    SE = \"southeast\",\r\n    SSE = \"south-southeast\",\r\n    SSW = \"South-southwest\",\r\n    SW = \"southwest\",\r\n    W = \"west\",\r\n    WEST = \"west\",\r\n    WNW = \"west-northwest\",\r\n    WSW = \"west-southwest\"\r\n}\r\nexport declare enum PALETTE {\r\n    AQUA = \"#7FDBFF\",\r\n    BLUE = \"#0074D9\",\r\n    NAVY = \"#001f3f\",\r\n    TEAL = \"#39CCCC\",\r\n    GREEN = \"#2ECC40\",\r\n    LIME = \"#01FF70\",\r\n    OLIVE = \"#3D9970\",\r\n    YELLOW = \"#FFDC00\",\r\n    FUCHSIA = \"#F012BE\",\r\n    MAROON = \"#85144b\",\r\n    ORANGE = \"#FF851B\",\r\n    RED = \"#FF4136\",\r\n    BLACK = \"#111111\",\r\n    GRAY = \"#AAAAAA\",\r\n    PURPLE = \"#B10DC9\",\r\n    SILVER = \"#DDDDDD\",\r\n    WHITE = \"#FFFFFF\"\r\n}\r\nexport declare const UI: {\r\n    COLORS: {\r\n        SCHEME: {\r\n            HIGHLIGHT: PALETTE;\r\n            PRIMARY: PALETTE;\r\n            QUATERNARY: PALETTE;\r\n            SECONDARY: PALETTE;\r\n            TERTIARY: PALETTE;\r\n        };\r\n    };\r\n    PALETTE: typeof PALETTE;\r\n    PLACEHOLDER_TEXT: {\r\n        CARD_SECTION_HEADER: string;\r\n        CARD_SUBTITLE: string;\r\n    };\r\n    WIDGETS: {\r\n        WEATHER_TODAY: {\r\n            COLOR_ONE: string;\r\n        };\r\n    };\r\n    WX_SECTION__WIDGET_COUNT: number;\r\n};\r\n"}}
