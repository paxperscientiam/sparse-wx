{"code":"import { processGeocoderResultsService } from \"~Services\";\r\nimport { APPROVED_POLITIES, INTERFACE, PROPS, } from \"~Data/Dictionary\";\r\nimport { fetch, push } from \"~Data/PushPull\";\r\nexport function validateUserName(input) {\r\n    if (/^.{1,26}$/i.test(input)) {\r\n        // test for length\r\n        return [true, { message: \"Nice name.\" }];\r\n    }\r\n    return [\r\n        false,\r\n        {\r\n            message: \"!!! Your name cannot be longer than 26 characters.\",\r\n        },\r\n    ];\r\n}\r\n// // tslint:disable-next-line:max-line-length\r\n// const isLatin = /^[0-9a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF\\s,\\.'\\?\\\\!-]{2,25}$/i.test(input)\r\n// if (!isLatin) {\r\n//   return [false, {message: \"Sorry, try another name\"}]\r\n// }\r\n// return [true, {message: \"OK\"}]\r\n// //    return isLatin\r\n// //         let isCJK = /[\\u4e00-\\u9fa5 -]/.test(input)\r\n// //     isCJK = true\r\n// //     // https://stackoverflow.com/a/2385967\r\n// //    //  if (isLatin || isCJK) {\r\n// //     //         return true\r\n// //     //     }\r\n// //     //     return false;\r\n// }\r\nexport function validateZIP(input) {\r\n    // https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch04s14.html\r\n    return /^[0-9]{5}(?:-[0-9]{4})?$/.test(input);\r\n}\r\nexport function validateMailingAddress(address) {\r\n    // https://developers.google.com/maps/documentation/javascript/geocoding#GeocodingAddressTypes\r\n    if (address == null) {\r\n        return [false, \"No valid address.\"];\r\n    }\r\n    const GeoInterface = INTERFACE.GoogleGeoCodeInterface;\r\n    const response = Maps.newGeocoder()\r\n        .setRegion(\"us\")\r\n        .geocode(address);\r\n    if (response.status === \"ZERO_RESULTS\") {\r\n        return [false, \"ZERO_RESULTS\"];\r\n    }\r\n    const result = response.results[0];\r\n    const polity = result.address_components;\r\n    const approvedPolities = Object.keys(APPROVED_POLITIES);\r\n    polity.forEach((pol) => {\r\n        if (pol.types.indexOf(GeoInterface.COUNTRY) > -1) {\r\n            push([\"user\", \"country\"], pol.long_name);\r\n        }\r\n    });\r\n    const strPolity = fetch(\"user\", \"country\");\r\n    const isApprovedPolity = approvedPolities.indexOf(strPolity) > -1;\r\n    if (!isApprovedPolity) {\r\n        Application.userProperties.deleteProperty(PROPS.userLocale.country);\r\n        return [false, \"UNSUPPORTED_REGION\"];\r\n    }\r\n    Logger.log(`The polity ${strPolity} is approved: ${isApprovedPolity}`);\r\n    // stores approved data\r\n    processGeocoderResultsService(polity, result.geometry);\r\n    const lastAddressResult = fetch(\"user\", \"address\");\r\n    //  const lastAddressResult2 = user.fetch(\"suggested_address_two\").response\r\n    if (lastAddressResult != null) {\r\n        push([\"user\", \"suggested_address_two\"], lastAddressResult);\r\n    }\r\n    push([\"user\", \"address\"], result.formatted_address);\r\n    //\r\n    return [true];\r\n}\r\n//# sourceMappingURL=Validate.js.map","map":"{\"version\":3,\"file\":\"Validate.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Utilities/Validate.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ramos/Development/gmail-weather/Utilities/Validate.d.ts","writeByteOrderMark":false,"text":"export declare function validateUserName(input: string): (boolean | {\r\n    message: string;\r\n})[];\r\nexport declare function validateZIP(input: string): boolean;\r\nexport declare function validateMailingAddress(address: string): (string | boolean)[];\r\n"}}
