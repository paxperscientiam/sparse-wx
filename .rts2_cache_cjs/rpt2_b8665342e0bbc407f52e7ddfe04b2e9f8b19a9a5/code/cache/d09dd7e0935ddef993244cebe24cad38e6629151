{"code":"//     Copyright (C) 2018 Christopher David Ramos\r\nimport { DateArray } from \"~Utilities/Date\";\r\nimport { fetch } from \"~Data/PushPull\";\r\nimport { DictionaryIcons } from \"~Data/Dictionary/Icons\";\r\nconst ICONS = new DictionaryIcons();\r\nimport { WeatherServiceFallbackCard } from \"~Cards/WeatherServiceStatus\";\r\nimport { DisclaimerSection } from \"~Cards/Main/Sections/Disclaimer\";\r\nimport { NavSection } from \"~Cards/Main/Sections/Nav\";\r\nimport { WeatherSection } from \"~Cards/Main/Sections/Weather\";\r\nimport { CardFactory } from \"~Cards/Aux\";\r\n//\r\nimport { UserCard } from \"~Cards/User\";\r\nimport { checkUserServiceStatus, checkWeatherServiceStatus, } from \"~Services\";\r\n//\r\nexport function MainCard() {\r\n    // Check if NWS API is working\r\n    if (checkWeatherServiceStatus() !== \"OK\") {\r\n        return WeatherServiceFallbackCard();\r\n    }\r\n    // Check if user address is defined\r\n    if (checkUserServiceStatus() !== \"OK\") {\r\n        return UserCard({ subtitle: \"let's get started\" });\r\n    }\r\n    const date = new DateArray();\r\n    const userName = fetch(\"user\", \"name\");\r\n    const greeting = (() => {\r\n        if (!!userName) {\r\n            return `${date.GREETING}, ${userName}!`;\r\n        }\r\n        else {\r\n            return `${date.GREETING}!`;\r\n        }\r\n    })();\r\n    const data = {\r\n        image: ICONS.UI.IMG_LOGO,\r\n        name: \"mainCard\",\r\n        subtitle: `Today is ${date.WEEKDAY}.`,\r\n        title: greeting,\r\n    };\r\n    return new CardFactory(data).addSections([\r\n        WeatherSection(),\r\n        NavSection(),\r\n        DisclaimerSection(),\r\n    ]);\r\n}\r\n//# sourceMappingURL=Main.js.map","map":"{\"version\":3,\"file\":\"Main.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Cards/Main.ts\"],\"names\":[],\"mappings\":\"AAAA,iDAAiD;AACjD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAA;AAE3C,OAAO,EAAC,KAAK,EAAC,MAAM,gBAAgB,CAAA;AAEpC,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAA;AACxD,MAAM,KAAK,GAAG,IAAI,eAAe,EAAE,CAAA;AAEnC,OAAO,EAAE,0BAA0B,EAAE,MAAM,6BAA6B,CAAA;AAExE,OAAO,EAAE,iBAAiB,EAAE,MAAM,iCAAiC,CAAA;AACnE,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAA;AACrD,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAA;AAE7D,OAAO,EAAE,WAAW,EAAE,MAAM,YAAY,CAAA;AACxC,EAAE;AACF,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAA;AAEtC,OAAO,EACL,sBAAsB,EACtB,yBAAyB,GAC1B,MAAM,WAAW,CAAA;AAClB,EAAE;AACF,MAAM,UAAU,QAAQ;IACtB,8BAA8B;IAC9B,IAAI,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACxC,OAAO,0BAA0B,EAAE,CAAA;KACpC;IAED,mCAAmC;IACnC,IAAI,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACrC,OAAO,QAAQ,CAAC,EAAC,QAAQ,EAAE,mBAAmB,EAAC,CAAC,CAAA;KACjD;IAED,MAAM,IAAI,GAAG,IAAI,SAAS,EAAE,CAAA;IAE5B,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAEtC,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE;QACrB,IAAI,CAAC,CAAC,QAAQ,EAAE;YACd,OAAO,GAAG,IAAI,CAAC,QAAQ,KAAK,QAAQ,GAAG,CAAA;SACxC;aAAM;YACL,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAA;SAC3B;IACH,CAAC,CAAC,EAAE,CAAA;IAEJ,MAAM,IAAI,GAAG;QACX,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,QAAQ;QACxB,IAAI,EAAE,UAAU;QAChB,QAAQ,EAAE,YAAY,IAAI,CAAC,OAAO,GAAG;QACrC,KAAK,EAAE,QAAQ;KAChB,CAAA;IAED,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;QACvC,cAAc,EAAE;QAChB,UAAU,EAAE;QACZ,iBAAiB,EAAE;KACpB,CAAC,CAAA;AACJ,CAAC\"}","dts":{"name":"/Users/ramos/Development/gmail-weather/Cards/Main.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"app\" />\r\nexport declare function MainCard(): CardBuilder;\r\n"}}
