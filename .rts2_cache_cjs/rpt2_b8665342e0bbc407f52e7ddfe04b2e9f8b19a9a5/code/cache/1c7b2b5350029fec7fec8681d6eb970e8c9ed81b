{"code":"//     Copyright (C) 2018 Christopher David Ramos\r\nexport const NWSUrlService = {\r\n    uri: {\r\n        base: \"https://api.weather.gov/\",\r\n        alerts: {\r\n            active: \"alerts/active\",\r\n        },\r\n    },\r\n    getMetaLink(coordinates) {\r\n        return `${this.uri.base}points/${coordinates}`;\r\n    },\r\n};\r\n// interface INWSUrlService {\r\n// }\r\n// export class NWSUrlService {\r\n//   NWS_INTERFACE\r\n//   API: any\r\n//   URL_BASE: string\r\n//   alerts: string\r\n//   activeAlerts: string\r\n//   constructor() {\r\n//     this.NWS_INTERFACE = dictionary.INTERFACE.NationalWeatherServiceInterface\r\n//     this.API = this.NWS_INTERFACE.API\r\n//     this.URL_BASE = this.API._\r\n//     this.alerts = `${this.URL_BASE}${this.API.ALERTS._}`\r\n//     this.activeAlerts = `${this.URL_BASE}${this.API.ALERTS.ACTIVE}`\r\n//   }\r\n//   meta(coordinates: string) {\r\n//     /// points/{point}\r\n//     return `${this.URL_BASE}${this.API.POINTS._}/${coordinates}`\r\n//   }\r\n//   forecast(wfo: string, gridpoints: string) {\r\n//     let url = `${this.URL_BASE}${this.API.GRID_POINTS.FORECAST._}`\r\n//     url = url.replace(/@wfo/i, wfo)\r\n//     url = url.replace(/@xy/i, gridpoints)\r\n//     return url\r\n//   }\r\n//   zoneAlerts(zoneid: string) {\r\n//     // note that zone is county id which comes from meta.properties.county\r\n//     // eg https://api.weather.gov/alerts/active/zone/VTC007\r\n//     return `${this.URL_BASE}${this.API.ALERTS.ACTIVE}/zone/${zoneid}`\r\n//   }\r\n// }\r\n// //\r\n// //\r\n// // function _nwsUrlHandlerTest_metaUrlFromCoord() {\r\n// //   const coordinates = \"44.4759,-73.2121\"\r\n// //   const a = new NWSUrlService()\r\n// //   const b = a.meta\r\n// //   const c = b(coordinates); Logger.log(c)\r\n// //   return c\r\n// // }\r\n// //\r\n// // function _nwsUrlHandlerTest__forecastUrlFromCoord() {\r\n// //   const coordinates = \"44.4759,-73.2121\"\r\n// //   const a = new NWSUrlService()\r\n// //   const b = a.meta\r\n// //   const metaUrl = b(coordinates)\r\n// //   const forecastUrl = a._forecastUrlFromCoord(metaUrl); Logger.log(forecastUrl)\r\n// //   return forecastUrl\r\n// // }\r\n// // //\r\n// // function _nwsUrlHandlerTest_forecastUrlFromCoord() {\r\n// //   const coordinates = \"44.4759,-73.2121\"\r\n// //   const a = new NWSUrlService(); Logger.log(a)\r\n// //   const b = a.forecastUrlFromCoord; Logger.log(b)\r\n// //   const c = b(coordinates); Logger.log(c)\r\n// // }\r\n//# sourceMappingURL=nwsUrlHandlers.js.map","map":"{\"version\":3,\"file\":\"nwsUrlHandlers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Handlers/nwsUrlHandlers.ts\"],\"names\":[],\"mappings\":\"AAAA,iDAAiD;AAEjD,MAAM,CAAC,MAAM,aAAa,GAAG;IACzB,GAAG,EAAE;QACD,IAAI,EAAE,0BAA0B;QAEhC,MAAM,EAAE;YACJ,MAAM,EAAE,eAAe;SAC1B;KACJ;IAED,WAAW,CAAC,WAAmB;QAC3B,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,UAAU,WAAW,EAAE,CAAA;IAClD,CAAC;CACJ,CAAA;AAED,6BAA6B;AAC7B,IAAI;AAEJ,+BAA+B;AAC/B,kBAAkB;AAClB,aAAa;AACb,qBAAqB;AACrB,mBAAmB;AACnB,yBAAyB;AAEzB,oBAAoB;AACpB,gFAAgF;AAChF,wCAAwC;AAExC,iCAAiC;AAEjC,2DAA2D;AAE3D,sEAAsE;AAEtE,MAAM;AAEN,gCAAgC;AAChC,yBAAyB;AACzB,mEAAmE;AACnE,MAAM;AAEN,gDAAgD;AAChD,qEAAqE;AACrE,sCAAsC;AACtC,4CAA4C;AAC5C,iBAAiB;AACjB,MAAM;AAEN,iCAAiC;AACjC,6EAA6E;AAC7E,8DAA8D;AAC9D,wEAAwE;AACxE,MAAM;AACN,IAAI;AACJ,KAAK;AACL,KAAK;AACL,sDAAsD;AACtD,8CAA8C;AAC9C,qCAAqC;AACrC,wBAAwB;AACxB,+CAA+C;AAC/C,gBAAgB;AAChB,OAAO;AACP,KAAK;AACL,2DAA2D;AAC3D,8CAA8C;AAC9C,qCAAqC;AACrC,wBAAwB;AACxB,sCAAsC;AAEtC,qFAAqF;AACrF,0BAA0B;AAC1B,OAAO;AACP,QAAQ;AACR,0DAA0D;AAC1D,8CAA8C;AAC9C,oDAAoD;AACpD,uDAAuD;AACvD,+CAA+C;AAC/C,OAAO\"}","dts":{"name":"/Users/ramos/Development/gmail-weather/Handlers/nwsUrlHandlers.d.ts","writeByteOrderMark":false,"text":"export declare const NWSUrlService: {\r\n    uri: {\r\n        base: string;\r\n        alerts: {\r\n            active: string;\r\n        };\r\n    };\r\n    getMetaLink(coordinates: string): string;\r\n};\r\n"}}
