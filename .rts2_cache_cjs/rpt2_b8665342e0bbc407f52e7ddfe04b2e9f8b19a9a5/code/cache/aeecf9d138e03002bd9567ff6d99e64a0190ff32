{"code":"//     Copyright (C) 2018 Christopher David Ramos\r\nimport { fetch, push } from \"~Data/PushPull\";\r\nexport class CardFactory {\r\n    constructor(data) {\r\n        this.card = CardService.newCardBuilder();\r\n        this.cardHeader = CardService.newCardHeader();\r\n        if (data.name) {\r\n            this.card.setName(data.name);\r\n        }\r\n        if (data.title) {\r\n            this.cardHeader.setTitle(data.title);\r\n        }\r\n        if (data.subtitle) {\r\n            this.cardHeader.setSubtitle(data.subtitle);\r\n        }\r\n        if (data.image) {\r\n            this.cardHeader.setImageUrl(data.image);\r\n        }\r\n        this.card.setHeader(this.cardHeader);\r\n    }\r\n    addSections(sections) {\r\n        sections.forEach((section) => {\r\n            if (section != null) {\r\n                this.card.addSection(section);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    addSection(section) {\r\n        this.card.addSection(section);\r\n        return this;\r\n    }\r\n    addCardAction() {\r\n        return this;\r\n    }\r\n    build() {\r\n        return this.card.build();\r\n    }\r\n    setName(name) {\r\n        this.card.setName(name);\r\n        return this;\r\n    }\r\n    setHeader(cardHeader) {\r\n        this.card.setHeader(cardHeader);\r\n        return this;\r\n    }\r\n}\r\nexport class CardSectionFactory {\r\n    constructor(args) {\r\n        this.data = {};\r\n        this.section = CardService.newCardSection();\r\n        this.data = {\r\n            header: \" \",\r\n            ...args,\r\n        };\r\n        if (typeof this.data.header === \"string\") {\r\n            this.section.setHeader(this.data.header);\r\n            push([\"state\", \"display.transient.card.section.header\"], this.data.header);\r\n        }\r\n    }\r\n    addWidget(widget) {\r\n        this.section.addWidget(widget);\r\n        return this;\r\n    }\r\n    addWidgets(widgets) {\r\n        widgets.forEach((widget) => {\r\n            this.section.addWidget(widget);\r\n        });\r\n        return this;\r\n    }\r\n    setCollapsible(value) {\r\n        this.section.setCollapsible(value);\r\n        return this;\r\n    }\r\n    build() {\r\n        return this.section;\r\n    }\r\n}\r\nexport class WidgetFactory {\r\n    newTextInput(data) {\r\n        const widget = CardService.newTextInput()\r\n            .setFieldName(data.fieldName)\r\n            .setTitle(data.title)\r\n            .setHint(data.hint);\r\n        if (data.suggestions) {\r\n            widget.setSuggestionsAction(data.suggestions);\r\n        }\r\n        return widget;\r\n    }\r\n    newSelectionInput(data) {\r\n        const widget = CardService.newSelectionInput()\r\n            .setFieldName(data.fieldName)\r\n            .setTitle(data.title);\r\n        // @ts-ignore\r\n        if (data.type === \"DROPDOWN\") {\r\n            widget\r\n                .setType(CardService.SelectionInputType.DROPDOWN);\r\n        }\r\n        const items = data.items;\r\n        items.forEach((item) => {\r\n            let isSelected = false;\r\n            if (fetch(\"user\", \"temp_unit\") === item.value) {\r\n                isSelected = true;\r\n            }\r\n            widget.addItem(item.text, item.value, isSelected);\r\n        });\r\n        return widget;\r\n    }\r\n    newTextParagraph(data) {\r\n        return CardService.newTextParagraph()\r\n            .setText(data.text);\r\n    }\r\n    newTextButton(data) {\r\n        const widget = CardService.newTextButton()\r\n            .setText(data.text);\r\n        if (data.action) {\r\n            widget.setOnClickAction(data.action);\r\n        }\r\n        return widget;\r\n    }\r\n    newKeyValue(data) {\r\n        const widget = CardService.newKeyValue()\r\n            .setContent(data.content);\r\n        if (data.iconUrl) {\r\n            widget.setIconUrl(data.iconUrl);\r\n        }\r\n        //     if (data.icon) {\r\n        //       widget.setIcon(data.icon)\r\n        //     }\r\n        if (data.multiline) {\r\n            widget.setMultiline(data.multiline);\r\n        }\r\n        return widget;\r\n    }\r\n    _TextInput(data) {\r\n        return this.newTextInput(data);\r\n    }\r\n    _SelectionInput(data) {\r\n        return this.newSelectionInput(data);\r\n    }\r\n    _Paragraph(data) {\r\n        return this.newTextParagraph(data);\r\n    }\r\n    _TextButton(data) {\r\n        return this.newTextButton(data);\r\n    }\r\n    _KeyValue(data) {\r\n        return this.newKeyValue(data);\r\n    }\r\n}\r\n//# sourceMappingURL=Aux.js.map","map":"{\"version\":3,\"file\":\"Aux.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Cards/Aux.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ramos/Development/gmail-weather/Cards/Aux.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"app\" />\r\n/// <reference types=\"google-apps-script\" />\r\ninterface ICardData {\r\n    image?: any;\r\n    name?: string;\r\n    title?: string;\r\n    subtitle?: string;\r\n}\r\ninterface ICardWrapper extends CardBuilder {\r\n    addSections: (sections: CardSection[]) => this;\r\n    setHeader: (cardHeader: CardHeader) => this;\r\n    setName: (name: string) => this;\r\n}\r\ninterface ICardSectionData {\r\n    header?: string;\r\n}\r\ninterface ICardSectionWrapper {\r\n    data: ICardSectionData;\r\n    section: CardSection;\r\n    addWidgets: (widgets: Widget[]) => this;\r\n    addWidget: (widget: Widget) => this;\r\n    setCollapsible: (value: boolean) => this;\r\n    build: () => CardSection;\r\n}\r\ninterface IWidgetData {\r\n    fieldName: string;\r\n    title: string;\r\n    hint: string;\r\n}\r\ninterface IWidgetSuggestionsData extends IWidgetData {\r\n    suggestions: Action;\r\n}\r\ninterface IWidgetSuggestionsData extends IWidgetData {\r\n    suggestions: Action;\r\n}\r\ninterface IWidgetSelectionData extends IWidgetData {\r\n    type: SelectionInputType;\r\n    items: any[];\r\n}\r\nexport declare class CardFactory implements ICardWrapper {\r\n    card: CardBuilder;\r\n    cardHeader: CardHeader;\r\n    constructor(data: ICardData);\r\n    addSections(sections: CardSection[]): this;\r\n    addSection(section: CardSection): this;\r\n    addCardAction(): this;\r\n    build(): GoogleAppsScript.Card_Service.Card;\r\n    setName(name: string): this;\r\n    setHeader(cardHeader: CardHeader): this;\r\n}\r\nexport declare class CardSectionFactory implements ICardSectionWrapper {\r\n    data: ICardSectionData;\r\n    section: CardSection;\r\n    constructor(args?: ICardSectionData);\r\n    addWidget(widget: Widget): this;\r\n    addWidgets(widgets: Widget[]): this;\r\n    setCollapsible(value: boolean): this;\r\n    build(): GoogleAppsScript.Card_Service.CardSection;\r\n}\r\nexport declare class WidgetFactory {\r\n    newTextInput(data: IWidgetSuggestionsData): GoogleAppsScript.Card_Service.TextInput;\r\n    newSelectionInput(data: IWidgetSelectionData): SelectionInput;\r\n    newTextParagraph(data: {\r\n        text: string;\r\n    }): TextParagraph;\r\n    newTextButton(data: any): TextButton;\r\n    newKeyValue(data: any): KeyValue;\r\n    _TextInput(data: any): TextInput;\r\n    _SelectionInput(data: any): SelectionInput;\r\n    _Paragraph(data: any): TextParagraph;\r\n    _TextButton(data: any): TextButton;\r\n    _KeyValue(data: any): KeyValue;\r\n}\r\nexport {};\r\n"}}
