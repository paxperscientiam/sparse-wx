{"code":"//     Copyright (C) 2018 Christopher David Ramos\r\nimport { fetch } from \"~Data/PushPull\";\r\nexport function apparentTemperatureService(args) {\r\n    let temperature;\r\n    let windspeed;\r\n    let tempUnit;\r\n    tempUnit = fetch(\"user\", \"temp_unit\");\r\n    // Temperature in F and windspeed in MPH\r\n    // https://www.weather.gov/safety/cold-faqs\r\n    // Windchill (ÂºF) = 35.74 + 0.6215T - 35.75(V^0.16) + 0.4275T(V^0.16)\r\n    if (!args.temperature || !args.windspeed) {\r\n        return null;\r\n    }\r\n    temperature = Number(args.temperature);\r\n    windspeed = Number(args.windspeed);\r\n    if (tempUnit === \"dropdown_item_f\") {\r\n        if (temperature <= 50 && windspeed > 3) {\r\n            const windchill = 35.74\r\n                + (0.6215 * temperature)\r\n                - (35.75 * Math.pow(windspeed, 0.16))\r\n                + (0.4275 * temperature * Math.pow(windspeed, 0.16));\r\n            return parseInt(windchill.toString(), 10).toFixed(0);\r\n        }\r\n        return null;\r\n    }\r\n    if (tempUnit === \"dropdown_item_c\") {\r\n        if (temperature <= 10 && windspeed > 4.8) {\r\n            // convert windspeed to KPM (making an assumption)\r\n            windspeed *= 1.61;\r\n            const windchill = 13.12\r\n                + (0.6125 * temperature)\r\n                - (11.37 * Math.pow(windspeed, 0.16))\r\n                + (0.3965 * Math.pow(windspeed, 0.16));\r\n            return parseInt(windchill.toString(), 10).toFixed(0);\r\n        }\r\n        return null;\r\n    }\r\n    //   if (temperature !=null && relativeHumidity != null) {\r\n    //         // temperature in F and relativeHumidty in percentage points\r\n    //         temperature = Number(temperature)\r\n    //         relativeHumidity = Number(relativeHumidity)\r\n    //         if (temperature >= 80 && relativeHumidity >= 40) {\r\n    //             return _calculateHeadIndexService(temperature,\r\n    //                                               relativeHumidity)\r\n    //         }\r\n    //     }\r\n    return null;\r\n}\r\n// function _calculateHeadIndexService(temperature, RH) {\r\n//     // https://www.weather.gov/ama/heatindex\r\n//     const heatIndex =\r\n//         -42.379\r\n//         + (2.04901523 * temperature)\r\n//         + (10.14333127 * RH)\r\n//         - (0.22475541 * temperature * RH)\r\n//         - (Math.pow(6.83783, -3) * Math.pow(temperature, 2))\r\n//         - (Math.pow(5.481717, -2) * Math.pow(RH, 2))\r\n//         + (Math.pow(1.22874, -3) * Math.pow(temperature, 2) * RH)\r\n//         + (Math.pow(8.5282, -4) * temperature * Math.pow(RH, 2))\r\n//         - (Math.pow(1.99, -6) * Math.pow(temperature, 2) * Math.pow(RH, 2))\r\n//     Logger.log(\"Apparent temp is Heat Index\")\r\n//     return heatIndex\r\n// }\r\n// function apparentTempTest() {\r\n//     const x = apparentTemperatureService({ temperature: 100, relativeHumidity: 50 })\r\n//     Logger.log(x)\r\n// }\r\n//# sourceMappingURL=ComputeApparentTemperatureService.js.map","map":"{\"version\":3,\"file\":\"ComputeApparentTemperatureService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Services/ComputeApparentTemperatureService.ts\"],\"names\":[],\"mappings\":\"AAAA,iDAAiD;AACjD,OAAO,EAAC,KAAK,EAAC,MAAM,gBAAgB,CAAA;AAEpC,MAAM,UAAU,0BAA0B,CAAC,IAAiB;IAC1D,IAAI,WAAW,CAAA;IACf,IAAI,SAAS,CAAA;IACb,IAAI,QAAQ,CAAA;IAEZ,QAAQ,GAAG,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,CAAA;IACrC,wCAAwC;IACxC,2CAA2C;IAC3C,qEAAqE;IAErE,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;QACxC,OAAO,IAAI,CAAA;KACZ;IAED,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;IACtC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IAElC,IAAI,QAAQ,KAAK,iBAAiB,EAAE;QAClC,IAAI,WAAW,IAAI,EAAE,IAAI,SAAS,GAAG,CAAC,EAAE;YACtC,MAAM,SAAS,GAAG,KAAK;kBACnB,CAAC,MAAM,GAAG,WAAW,CAAC;kBACtB,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;kBACnC,CAAC,MAAM,GAAG,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAA;YAEtD,OAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;SACrD;QACD,OAAO,IAAI,CAAA;KACZ;IAED,IAAI,QAAQ,KAAK,iBAAiB,EAAE;QAClC,IAAI,WAAW,IAAI,EAAE,IAAI,SAAS,GAAG,GAAG,EAAE;YACxC,kDAAkD;YAClD,SAAS,IAAI,IAAI,CAAA;YACjB,MAAM,SAAS,GAAG,KAAK;kBACnB,CAAC,MAAM,GAAG,WAAW,CAAC;kBACtB,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;kBACnC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAA;YACxC,OAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;SACrD;QACD,OAAO,IAAI,CAAA;KACZ;IAED,0DAA0D;IAC1D,uEAAuE;IACvE,4CAA4C;IAC5C,sDAAsD;IAEtD,6DAA6D;IAC7D,6DAA6D;IAC7D,kEAAkE;IAClE,YAAY;IACZ,QAAQ;IACR,OAAO,IAAI,CAAA;AACb,CAAC;AAED,yDAAyD;AACzD,+CAA+C;AAC/C,wBAAwB;AACxB,kBAAkB;AAClB,uCAAuC;AACvC,+BAA+B;AAC/B,4CAA4C;AAC5C,+DAA+D;AAC/D,uDAAuD;AACvD,oEAAoE;AACpE,mEAAmE;AACnE,8EAA8E;AAE9E,gDAAgD;AAChD,uBAAuB;AACvB,IAAI;AAEJ,gCAAgC;AAChC,uFAAuF;AACvF,oBAAoB;AACpB,IAAI\"}","dts":{"name":"/Users/ramos/Development/gmail-weather/Services/ComputeApparentTemperatureService.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"app\" />\r\nexport declare function apparentTemperatureService(args: InputObject): null | string;\r\n"}}
