{"code":"//     Copyright (C) 2018 Christopher David Ramos\r\n/**\r\n * Returns an object with the values of the argument objects.\r\n * If multiple objects have the same property value, the last value set is retained.\r\n * @param {...Object}\r\n * @returns {Object}\r\n */\r\nimport { push } from \"~Data/PushPull\";\r\n// export function mergeObjs() {\r\n//   const obj = arguments[0]\r\n//   for (i = 1; i < arguments.length; i++) {\r\n//     const src = arguments[i]\r\n//     for (const key in src) {\r\n//       if (src.hasOwnProperty(key)) {\r\n//         obj[key] = src[key]\r\n//       }\r\n//     }\r\n//   }\r\n//   return obj\r\n// }\r\n// export function flattenObj(ob: object) {\r\n//   let iterator\r\n//   const toReturn = {}\r\n//   let x\r\n//   let flatObject\r\n//   for (iterator in ob) {\r\n//     if (!ob.hasOwnProperty(i)) {continue}\r\n//     if ((typeof ob[i]) === \"object\") {\r\n//       flatObject = flattenObject(ob[i])\r\n//       for (x in flatObject) {\r\n//         if (!flatObject.hasOwnProperty(x)) {continue}\r\n//         toReturn[i + \".\" + x] = flatObject[x]\r\n//       }\r\n//     } else {\r\n//       toReturn[i] = ob[i]\r\n//     }\r\n//   }\r\n//   return toReturn\r\n// }\r\n// export const curryIt = (uncurried: object) => {\r\n//   const parameters = Array.prototype.slice.call(arguments, 1)\r\n//   return function() {\r\n//     return uncurried.apply(this, parameters.concat(\r\n//       Array.prototype.slice.call(arguments, 0),\r\n//     ))\r\n//   }\r\n// }\r\n// https://jsleao.wordpress.com/2015/02/22/curry-and-compose-why-you-should-be-using-something-like-ramda-in-your-code/\r\n// https://hackernoon.com/currying-in-js-d9ddc64f162e\r\n// export function curry(fn: object) {\r\n//   return (...xs) => {\r\n//     if (xs.length === 0) {\r\n//       throw Error(\"EMPTY INVOCATION\")\r\n//     }\r\n//     if (xs.length >= fn.length) {\r\n//       return fn(...xs)\r\n//     }\r\n//     return curry(fn.bind(null, ...xs))\r\n//   }\r\n// }\r\n// export function compose(/* fn1, fn2, ... */) {\r\n//   const funcs = arguments\r\n//   return function() {\r\n//     let args = arguments\r\n//     for (let i = funcs.length - 1; i >= 0; i--) {\r\n//       args = [funcs[i].apply(this, args)]\r\n//     }\r\n//     return args[0]\r\n//   }\r\n// }\r\n// function prefixKeys(prefix, obj) {\r\n//     return Object\r\n//         .keys(obj)\r\n//         .reduce((acc, key) => ({\r\n//             ...acc,\r\n//             ...{ [`${prefix}${key}` || key]: obj[key] },\r\n//         }), {})\r\n// }\r\n// function lowercaseObjProps(o) {\r\n//     return Object.keys(o).reduce((c, k) => (c[k.toLowerCase()] = o[k], c), {})\r\n// }\r\n// function uppercaseObjProps(o) {\r\n//     return Object.keys(o).reduce((c, k) => (c[k.toUpperCase()] = o[k], c), {})\r\n// }\r\n// function getAllMethods(obj) {\r\n//     return Object.getOwnPropertyNames(obj)\r\n//         .filter((prop) => {\r\n//             return typeof obj[prop] === \"function\"\r\n//         })\r\n// }\r\nexport function clearUserProperties() {\r\n    Logger.log(\"Delete Local NPT User Properties:\");\r\n    if (PropertiesService.getUserProperties() !== null) {\r\n        Logger.log(PropertiesService.getUserProperties().deleteAllProperties());\r\n        Logger.log(\"  Deleted\");\r\n    }\r\n    else {\r\n        Logger.log(\"  None\");\r\n    }\r\n}\r\nexport function clearScriptProperties() {\r\n    Logger.log(\"Delete Local Script Properties:\");\r\n    if (PropertiesService.getScriptProperties() !== null) {\r\n        Logger.log(PropertiesService.getScriptProperties().deleteAllProperties());\r\n        Logger.log(\"  Deleted\");\r\n    }\r\n    else {\r\n        Logger.log(\"  None\");\r\n    }\r\n}\r\nexport function clearConfig() {\r\n    clearUserProperties();\r\n    clearScriptProperties();\r\n    push([\"state\", \"mint\"], true);\r\n    //  uc.removeAll([\"mainCard\", \"wxRaw\", \"wxRawForecast\"])\r\n}\r\nexport function dumpScriptConfig() {\r\n    Logger.log(\"Dump of Script Properties ...\");\r\n    Logger.log((PropertiesService.getScriptProperties()).getProperties());\r\n}\r\nexport function dumpUserConfig() {\r\n    Logger.log(\"Dump of User Properties ...\");\r\n    Logger.log((PropertiesService.getUserProperties()).getProperties());\r\n}\r\nexport function dumpConfig() {\r\n    dumpScriptConfig();\r\n    dumpUserConfig();\r\n}\r\n//# sourceMappingURL=Utilities.js.map","map":"{\"version\":3,\"file\":\"Utilities.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Utilities/Utilities.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ramos/Development/gmail-weather/Utilities/Utilities.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Returns an object with the values of the argument objects.\r\n * If multiple objects have the same property value, the last value set is retained.\r\n * @param {...Object}\r\n * @returns {Object}\r\n */\r\nexport declare function clearUserProperties(): void;\r\nexport declare function clearScriptProperties(): void;\r\nexport declare function clearConfig(): void;\r\nexport declare function dumpScriptConfig(): void;\r\nexport declare function dumpUserConfig(): void;\r\nexport declare function dumpConfig(): void;\r\n"}}
