{"code":"// toLocaleString polyfill\r\n// https://github.com/willsp/polyfill-Number.toLocaleString-with-Locales/blob/master/polyfill.number.toLocaleString.js\r\nfunction replaceSeparators(sNum, separators) {\r\n    const sNumParts = sNum.split(\".\");\r\n    if (separators && separators.thousands) {\r\n        sNumParts[0] = sNumParts[0].replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1\" + separators.thousands);\r\n    }\r\n    sNum = sNumParts.join(separators.decimal);\r\n    return sNum;\r\n}\r\nexport function commaThousDotDec(sNum) {\r\n    sNum = sNum.toString();\r\n    const separators = {\r\n        decimal: \".\",\r\n        thousands: \",\",\r\n    };\r\n    return replaceSeparators(sNum, separators);\r\n}\r\n// Number.prototype.commaThousDotDec = function() {\r\n//   return commaThousDotDec(this.toString())\r\n// }\r\n//# sourceMappingURL=Number.js.map","map":"{\"version\":3,\"file\":\"Number.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Utilities/Number.ts\"],\"names\":[],\"mappings\":\"AAAA,0BAA0B;AAC1B,sHAAsH;AAEtH,SAAS,iBAAiB,CAAC,IAAS,EAAE,UAAe;IACnD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACjC,IAAI,UAAU,IAAI,UAAU,CAAC,SAAS,EAAE;QACtC,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,0BAA0B,EAAE,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,CAAA;KAC7F;IACD,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;IAEzC,OAAO,IAAI,CAAA;AACb,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,IAAmB;IAClD,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;IACtB,MAAM,UAAU,GAAG;QACjB,OAAO,EAAE,GAAG;QACZ,SAAS,EAAE,GAAG;KACf,CAAA;IACD,OAAO,iBAAiB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;AAC5C,CAAC;AAED,mDAAmD;AACnD,6CAA6C;AAC7C,IAAI\"}","dts":{"name":"/Users/ramos/Development/gmail-weather/Utilities/Number.d.ts","writeByteOrderMark":false,"text":"export declare function commaThousDotDec(sNum: number | string): any;\r\n"}}
