{"code":"//     Copyright (C) 2018 Christopher David Ramos\r\nexport function formatDateService(date, format = \"E, d MMM y\") {\r\n    return Utilities.formatDate(new Date(date), getUserTimeZone(), format);\r\n}\r\nexport function formatTimeService(date) {\r\n    return Utilities.formatDate(new Date(date), getUserTimeZone(), \"h:mm a\");\r\n}\r\nexport class DateArray {\r\n    constructor() {\r\n        const timeZone = getUserTimeZone();\r\n        const date = new Date();\r\n        this.HOUR = Number(Utilities.formatDate(date, timeZone, \"H\"));\r\n        this.WEEKDAY = Utilities.formatDate(date, timeZone, \"EEEE\");\r\n        this.WEEK_DAY = this.WEEKDAY;\r\n        this.MONTH = Utilities.formatDate(date, timeZone, \"MMMM\");\r\n        this.TIME = Utilities.formatDate(date, timeZone, \"h:mm a\");\r\n        if (this.HOUR >= 0 && this.HOUR < 12) {\r\n            // this.GREETING = Translate(\"Good morning\")\r\n            this.GREETING = \"Good morning\";\r\n        }\r\n        else if (this.HOUR >= 12 && this.HOUR < 18) {\r\n            // this.GREETING = Translate(\"Good afternoon\")\r\n            this.GREETING = \"Good afternoon\";\r\n        }\r\n        else {\r\n            // this.GREETING = Translate(\"Good evening\")\r\n            this.GREETING = \"Good evening\";\r\n        }\r\n    }\r\n}\r\nexport function timeConversion(millisec) {\r\n    // https://stackoverflow.com/a/32180863\r\n    const seconds = Math.round((millisec / 1000));\r\n    const minutes = Math.round((millisec / (1000 * 60)));\r\n    const hours = Math.round((millisec / (1000 * 60 * 60)));\r\n    const days = Math.round((millisec / (1000 * 60 * 60 * 24)));\r\n    if (seconds < 60) {\r\n        return seconds + \" Seconds\";\r\n    }\r\n    else if (minutes < 60) {\r\n        return minutes + \" Minutes\";\r\n    }\r\n    else if (hours < 24) {\r\n        return hours + \" Hours\";\r\n    }\r\n    else {\r\n        return days + \" Days\";\r\n    }\r\n}\r\nexport function formatAge(date) {\r\n    const msgDate = new Date(date).getTime();\r\n    const todayDate = Date.now(); // milliseconds\r\n    const age = timeConversion(todayDate - msgDate);\r\n    return age;\r\n}\r\n//\r\nexport function getUserTimeZone() {\r\n    return CalendarApp.getDefaultCalendar().getTimeZone();\r\n}\r\nexport function convertC2F(temperature) {\r\n    return (temperature * (9 / 5) + 32).toFixed(0);\r\n}\r\nexport function convertF2C(temperature) {\r\n    return ((temperature - 32) * 5 / 9).toFixed(0);\r\n}\r\n// export function diffDate(newDate, oldDate) {\r\n//   // expects date objects\r\n// }\r\nexport function timeStamp() {\r\n    return (new Date()).toTimeString().slice(0, 8);\r\n}\r\n//# sourceMappingURL=Date.js.map","map":"{\"version\":3,\"file\":\"Date.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Utilities/Date.ts\"],\"names\":[],\"mappings\":\"AAAA,iDAAiD;AAEjD,MAAM,UAAU,iBAAiB,CAAC,IAAU,EAAE,MAAM,GAAG,YAAY;IACjE,OAAO,SAAS,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,eAAe,EAAE,EAAE,MAAM,CAAC,CAAA;AACxE,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,IAAU;IAC1C,OAAO,SAAS,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,eAAe,EAAE,EAAE,QAAQ,CAAC,CAAA;AAC1E,CAAC;AAED,MAAM,OAAO,SAAS;IAQpB;QACE,MAAM,QAAQ,GAAG,eAAe,EAAE,CAAA;QAClC,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAA;QAEvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAA;QAC7D,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAA;QAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAA;QAC5B,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAA;QACzD,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;QAE1D,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE,EAAG;YACrC,4CAA4C;YAC5C,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAA;SAC/B;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE,EAAE;YAC5C,8CAA8C;YAC9C,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAA;SACjC;aAAM;YACL,4CAA4C;YAC5C,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAA;SAC/B;IACH,CAAC;CACF;AAED,MAAM,UAAU,cAAc,CAAC,QAAgB;IAC7C,uCAAuC;IACvC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAA;IAE7C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IAEpD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IAEvD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IAE3D,IAAI,OAAO,GAAG,EAAE,EAAE;QAChB,OAAO,OAAO,GAAG,UAAU,CAAA;KAC5B;SAAM,IAAI,OAAO,GAAG,EAAE,EAAE;QACvB,OAAO,OAAO,GAAG,UAAU,CAAA;KAC5B;SAAM,IAAI,KAAK,GAAG,EAAE,EAAE;QACrB,OAAO,KAAK,GAAG,QAAQ,CAAA;KACxB;SAAM;QACL,OAAO,IAAI,GAAG,OAAO,CAAA;KACtB;AACH,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,IAAS;IACjC,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAA;IACxC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA,CAAC,eAAe;IAC5C,MAAM,GAAG,GAAG,cAAc,CAAC,SAAS,GAAG,OAAO,CAAC,CAAA;IAC/C,OAAO,GAAG,CAAA;AACZ,CAAC;AACD,EAAE;AACF,MAAM,UAAU,eAAe;IAC7B,OAAO,WAAW,CAAC,kBAAkB,EAAE,CAAC,WAAW,EAAE,CAAA;AACvD,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,WAAmB;IAC5C,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;AAChD,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,WAAmB;IAC5C,OAAO,CAAC,CAAC,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;AAChD,CAAC;AACD,+CAA+C;AAC/C,4BAA4B;AAC5B,IAAI;AAEJ,MAAM,UAAU,SAAS;IACvB,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AAChD,CAAC\"}","dts":{"name":"/Users/ramos/Development/gmail-weather/Utilities/Date.d.ts","writeByteOrderMark":false,"text":"export declare function formatDateService(date: Date, format?: string): string;\r\nexport declare function formatTimeService(date: Date): string;\r\nexport declare class DateArray {\r\n    HOUR: number;\r\n    WEEKDAY: string;\r\n    WEEK_DAY: string;\r\n    MONTH: string;\r\n    TIME: string;\r\n    GREETING: string;\r\n    constructor();\r\n}\r\nexport declare function timeConversion(millisec: number): string;\r\nexport declare function formatAge(date: any): string;\r\nexport declare function getUserTimeZone(): string;\r\nexport declare function convertC2F(temperature: number): string;\r\nexport declare function convertF2C(temperature: number): string;\r\nexport declare function timeStamp(): string;\r\n"}}
