{"code":"import { render } from \"~Handlers/Templates\";\r\nimport { fetch, push } from \"~Data/PushPull\";\r\nimport { CARDINAL_DIRECTIONS, PROPS, UI, } from \"~Data/Dictionary\";\r\nimport { DictionaryIcons } from \"~Data/Dictionary/Icons\";\r\nconst ICONS = new DictionaryIcons();\r\nimport { WindSpeedHandler } from \"~Handlers/WindSpeed\";\r\nimport { apparentTemperatureService as serveAppartentTemperature, textColorTemperatureService as serveTextColorTemperature, } from \"~Services\";\r\nimport { convertF2C } from \"~Utilities/Date\";\r\nimport { WidgetFactory } from \"~Cards/Aux\";\r\nconst widgetFactory = new WidgetFactory();\r\n//\r\nexport function WeatherWidget(data) {\r\n    const widgetData = {};\r\n    const COLORS = UI.PALETTE;\r\n    let temperature = data.temp;\r\n    let tempUnit = \"F\";\r\n    const selectedTemperatureUnit = fetch(\"user\", \"temp_unit\");\r\n    const COLORTEMP = serveTextColorTemperature(temperature);\r\n    // @ts-ignore\r\n    COLORS.TEMP = COLORTEMP;\r\n    push([\"wx\", \"forecast.temperature\"], `${temperature}°${tempUnit}`);\r\n    const windspeedForApparentTemperatureService = ((data.windSpeed).replace(\" mph\", \"\")).split(\" to \");\r\n    if (selectedTemperatureUnit === \"dropdown_item_c\") {\r\n        tempUnit = \"C\";\r\n        temperature = convertF2C(temperature);\r\n    }\r\n    const apparentTemperature = serveAppartentTemperature({\r\n        temperature: Number(temperature),\r\n        windspeed: windspeedForApparentTemperatureService[0],\r\n    });\r\n    // const message  = `${temperature}°${tempUnit}, ${data.condition}`\r\n    const precipitationMessage = `${data.condition}.`;\r\n    const temperatureDisplay = `${temperature}°${tempUnit}`;\r\n    const ws2ws = CARDINAL_DIRECTIONS;\r\n    // @ts-ignore\r\n    let windDirection = ws2ws[data.windDirection];\r\n    if (windDirection == null) {\r\n        windDirection = data.windDirection;\r\n    }\r\n    const windPhrase = WindSpeedHandler(data.windSpeed);\r\n    const windMessage = `${windPhrase} to the ${windDirection}.`;\r\n    const name = data.name;\r\n    // const iconUrl = serveWeatherIcon(data.condition, data.isDaytime)\r\n    const iconUrl = data.iconUrl;\r\n    if (apparentTemperature != null) {\r\n        // @ts-ignore\r\n        widgetData.apparentTemperature = apparentTemperature;\r\n    }\r\n    return widgetFactory._KeyValue({\r\n        content: render(\"weatherToday\", {\r\n            COLORS,\r\n            day: name,\r\n            precipitationMessage,\r\n            tempUnit,\r\n            temperatureDisplay,\r\n            windMessage,\r\n            ...widgetData,\r\n        }),\r\n        iconUrl,\r\n        multiline: true,\r\n    });\r\n}\r\nexport function AuxWeatherWidget() {\r\n    const WX = PROPS.WX;\r\n    const cwaUrl = Application.userProperties.getProperty(WX.CWA);\r\n    const lat = fetch(\"user\", \"lat\");\r\n    const lon = fetch(\"user\", \"lon\");\r\n    const forecastUrl = `https://forecast.weather.gov/MapClick.php?lat=${lat}&lon=${lon}`;\r\n    return widgetFactory._KeyValue({\r\n        content: `Go to <a title=\"loool\" href=\"${forecastUrl}\">weather.gov</a> for more detail.`,\r\n        iconUrl: ICONS.UI.IMG_INFO,\r\n        multiline: true,\r\n    });\r\n}\r\nexport function WeatherErrorWidget(noWXcomment) {\r\n    const data = {\r\n        content: noWXcomment,\r\n        iconUrl: ICONS.UI.IMG_ERROR,\r\n        multiline: true,\r\n    };\r\n    return widgetFactory._KeyValue(data);\r\n}\r\n//# sourceMappingURL=Weather.js.map","map":"{\"version\":3,\"file\":\"Weather.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Cards/Main/Widgets/Weather.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ramos/Development/gmail-weather/Cards/Main/Widgets/Weather.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"app\" />\r\n/// <reference types=\"google-apps-script\" />\r\nexport declare function WeatherWidget(data: IData): KeyValue;\r\nexport declare function AuxWeatherWidget(): GoogleAppsScript.Card_Service.KeyValue;\r\nexport declare function WeatherErrorWidget(noWXcomment: string): GoogleAppsScript.Card_Service.KeyValue;\r\n"}}
