{"id":"Kwzt","dependencies":[{"name":"/Users/ramos/Development/gmail-weather/tsconfig.json","includedInParent":true,"mtime":1577992220082},{"name":"/Users/ramos/Development/gmail-weather/package.json","includedInParent":true,"mtime":1577926760432},{"name":"~Vendor","loc":{"line":3,"column":24},"parent":"/Users/ramos/Development/gmail-weather/src/Services/Weather.ts","resolved":"/Users/ramos/Development/gmail-weather/src/Vendor.ts"},{"name":"~Handlers/JsonResponse","loc":{"line":4,"column":29},"parent":"/Users/ramos/Development/gmail-weather/src/Services/Weather.ts","resolved":"/Users/ramos/Development/gmail-weather/src/Handlers/JsonResponse.ts"},{"name":"~Handlers/nwsUrlHandlers","loc":{"line":5,"column":31},"parent":"/Users/ramos/Development/gmail-weather/src/Services/Weather.ts","resolved":"/Users/ramos/Development/gmail-weather/src/Handlers/nwsUrlHandlers.ts"},{"name":"~Utilities/Date","loc":{"line":6,"column":21},"parent":"/Users/ramos/Development/gmail-weather/src/Services/Weather.ts","resolved":"/Users/ramos/Development/gmail-weather/src/Utilities/Date.ts"}],"generated":{"js":"var $Kwzt$exports={},$Kwzt$export$__esModule=!0;$Kwzt$exports.__esModule=$Kwzt$export$__esModule;var $Kwzt$var$_Vendor_1=$parcel$require(\"Kwzt\",\"~Vendor\"),$Kwzt$var$JsonResponse_1=$parcel$require(\"Kwzt\",\"~Handlers/JsonResponse\"),$Kwzt$var$nwsUrlHandlers_1=$parcel$require(\"Kwzt\",\"~Handlers/nwsUrlHandlers\"),$Kwzt$var$Date_1=$parcel$require(\"Kwzt\",\"~Utilities/Date\");function $Kwzt$var$nwsMetaLocationData(){var e=Number(fetch(\"user\",\"lat\")).toFixed(4)+\",\"+Number(fetch(\"user\",\"lon\")).toFixed(4);Logger.log(\"[\"+$Kwzt$var$Date_1.timeStamp()+\"][coord] \"+e);var t=$Kwzt$var$nwsUrlHandlers_1.NWSUrlService().getMetaLink(e);Logger.log(\"[\"+$Kwzt$var$Date_1.timeStamp()+\"][urlForMeta] \"+t);var r=dictionary.HTTP.WX_SERVICE.PARAMS,a=$Kwzt$var$JsonResponse_1.JsonResponseHandler(t,{},r);return _Cache(a.fetch.bind(a),[],\"wxRaw\",0).getResult()}function $Kwzt$var$getWeatherServiceDataService(){var e=Object.create($Kwzt$var$prepWeatherDataMethods),t=$Kwzt$var$nwsMetaLocationData();if(e.status=[],e.status.push(t.cacheStatus),null==t.cacheData)return push([\"state\",\"cache.wx.meta\"],\"found\"),e.status.push([!1,\"metadata not found in cache!\"]),e;if(push([\"state\",\"cache.wx.meta\"],\"not found\"),e.status.push([!0,\"metadata result found in cache\"]),null==$Kwzt$var$_Vendor_1.objectPath.get(t,\"cacheData.data.properties\"))return push([\"state\",\"cache.wx.meta.properties\"],\"meta\"),Logger.log(\"wxResponse does not contain wx properties\"),e.status.push([!1,\"wxUrl fail\"]),e;var r=$Kwzt$var$_Vendor_1.objectPath.get(t,\".data.properties.timeZone\");push([\"wx\",\"timeZone\"],r);var a=$Kwzt$var$_Vendor_1.objectPath.get(t,\"cacheData.data.properties.forecast\");if(null==a)return push([\"state\",\"service.wx.meta.forecastUrl\"],void 0),e.status.push([!1,\"wxUrl is undefined!\"]),e;push([\"state\",\"service.wx.meta.forecastUrl\"],a),e.status.push([!0,\"wxUrl: \"+a]);var s=dictionary.HTTP.WX_SERVICE.PARAMS,o=$Kwzt$var$JsonResponse_1.JsonResponseHandler(a,{},s),n=_Cache(o.fetch.bind(o),[],\"wxRawForecast\",0).getResult();if(null==n.cacheStatus)return push([\"state\",\"cache.wx\"],\"not cached\"),Logger.log(\"wx dump NOT found in cache!\"),e.status.push([!1,\"wx dump NOT found in cache!\"]),e;if(push([\"state\",\"cache.wx\"],\"cached\"),Logger.log(\"wx dump response found in cache\"),e.status.push([!0,\"wx dump response found in cache\"]),e.wx=$Kwzt$var$_Vendor_1.objectPath.get(n,\"cacheData.data\"),null==$Kwzt$var$_Vendor_1.objectPath.get(e,\"wx.properties\"))return e.status.push([!1,\"mo wx data from site!\"]),e;e.updateTime=$Kwzt$var$_Vendor_1.objectPath.get(e.wx,\"properties.updateTime\"),push([\"wx\",\"updateTime\"],e.updateTime),e.elevation=$Kwzt$var$_Vendor_1.objectPath.get(e.wx,\"properties.elevation\"),push([\"wx\",\"elevation\"],e.elevation);var i=$Kwzt$var$_Vendor_1.objectPath.get(e.wx,\"properties.periods\");return i&&(e.wxPeriodCount=i.length),e}var $Kwzt$export$getWeatherServiceDataService=$Kwzt$var$getWeatherServiceDataService;function $Kwzt$var$WeatherIconService(e,t){var r=t?\"DAY\":\"NIGHT\",a=ICONS.WX;Logger.log(\"WX CONDITION: \"+e);if(/(partly.*sunny|mostly.*cloudy)/i.test(e))return a.PARTLYSUNNY[r];if(/(partly.*cloudy|mostly.*sunny)/i.test(e))return a.PARTLYCLOUDY[r];if(/sunny/i.test(e))return a.SUNNY[r];if(/cloudy/i.test(e))return a.CLOUDY[r];if(/clear/i.test(e))return a.CLEAR[r];if([\"few\",\"isolated\",\"slight chance\",\"widely scattered\",\"chance\",\"scattered\",\"likely\",\"numerous\"].some(function(t){return e.toLowerCase().indexOf(t)>-1})){if(e.toLowerCase().indexOf(\"rain\")>-1)return a.CHANCERAIN[r];if(e.toLowerCase().indexOf(\"sleet\")>-1)return a.CHANCESLEET[r];if(e.toLowerCase().indexOf(\"snow\")>-1)return a.CHANCESNOW[r];if(e.toLowerCase().indexOf(\"storm\")>-1)return a.CHANCETSTORMS[r];if(e.toLowerCase().indexOf(\"flurries\")>-1)return a.CHANCEFLURRIES[r]}return/rain/i.test(e)?a.RAINY[r]:/flurries/i.test(e)?a.FLURRIES[r]:/fog/i.test(e)?a.FOG[r]:/haze/i.test(e)?a.HAZY[r]:/snow/i.test(e)?a.SNOW[r]:/sleet/i.test(e)?a.SLEET[r]:a.UNKNOWN}$Kwzt$exports.getWeatherServiceDataService=$Kwzt$export$getWeatherServiceDataService;var $Kwzt$export$WeatherIconService=$Kwzt$var$WeatherIconService;function $Kwzt$var$checkWeatherServiceStatus(){var e,t=$Kwzt$var$nwsUrlHandlers_1.NWSUrlService().uri.base,r=dictionary.HTTP.WX_SERVICE.PARAMS;try{e=$Kwzt$var$JsonResponse_1.JsonResponseHandler(t,{},r).fetch()}catch(s){return push([\"state\",\"status.wx\"],\"ERR\"),Logger.log(\"checkWeatherServiceStatus: \"+s),\"ERR\"}Logger.log(\"[\"+$Kwzt$var$Date_1.timeStamp()+\"][wxServiceStatus] \"+e.data.status);var a=$Kwzt$var$_Vendor_1.objectPath.get(e,\"data.status\");return push([\"state\",\"status.wx\"],a),a}$Kwzt$exports.WeatherIconService=$Kwzt$export$WeatherIconService;var $Kwzt$export$checkWeatherServiceStatus=$Kwzt$var$checkWeatherServiceStatus;function $Kwzt$var$getForecastStalenessService(){var e,t=fetch(\"wx\",\"updateTime\");return t?(e=Date.now()-new Date(t).getTime(),e=$Kwzt$var$Date_1.timeConversion(e),push([\"wx\",\"forecastAge\"],e),[!0,e]):[!1,\"unknown\"]}$Kwzt$exports.checkWeatherServiceStatus=$Kwzt$export$checkWeatherServiceStatus;var $Kwzt$export$getForecastStalenessService=$Kwzt$var$getForecastStalenessService;function $Kwzt$var$getAlertsByStateService(){var e,t=dictionary.HTTP.WX_SERVICE.PARAMS,r=fetch(\"user\",\"state\");return r?null!=(e=$Kwzt$var$JsonResponse_1.JsonResponseHandler(\"https://api.weather.gov/alerts/active/count\",{},t).fetch().data.areas[r])?(e=e.toFixed(0),push([\"state\",\"service.wx.alerts\"],!0),[!0,e]):(push([\"state\",\"service.wx.alerts\"],!1),[!1,\"0 alerts\"]):(push([\"state\",\"service.wx.alerts\"],\"ERR\"),[!1,\"ERR\"])}$Kwzt$exports.getForecastStalenessService=$Kwzt$export$getForecastStalenessService;var $Kwzt$export$getAlertsByStateService=$Kwzt$var$getAlertsByStateService;$Kwzt$exports.getAlertsByStateService=$Kwzt$export$getAlertsByStateService;var $Kwzt$var$prepWeatherDataMethods={getPeriod:function(e){var t=this.wx.properties.periods[e];return push([\"state\",\"display.wx.data.period\"],e),{status:[!0,\"wx is good\"],condition:t.shortForecast.toLowerCase(),iconUrl:t.icon,isDaytime:t.isDaytime,name:t.name,temp:t.temperature,unit:t.temperatureUnit,windDirection:t.windDirection,windSpeed:t.windSpeed,cwa:this.wx.properties.cwa,cwaUrl:\"https://www.weather.gov/\",updateTime:this.wx.properties.updateTime}}};"},"sourceMaps":null,"error":null,"hash":"45fabbc865088f4b15599f78601aae66","cacheData":{"env":{},"imports":{"$require$~Vendor":["~Vendor","*"],"$require$~Handlers/JsonResponse":["~Handlers/JsonResponse","*"],"$require$~Handlers/nwsUrlHandlers":["~Handlers/nwsUrlHandlers","*"],"$require$~Utilities/Date":["~Utilities/Date","*"]},"exports":{"__esModule":"$Kwzt$export$__esModule","getWeatherServiceDataService":"$Kwzt$export$getWeatherServiceDataService","WeatherIconService":"$Kwzt$export$WeatherIconService","checkWeatherServiceStatus":"$Kwzt$export$checkWeatherServiceStatus","getForecastStalenessService":"$Kwzt$export$getForecastStalenessService","getAlertsByStateService":"$Kwzt$export$getAlertsByStateService"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}